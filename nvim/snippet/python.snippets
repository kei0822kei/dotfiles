snippet     argparse
abbr        def function(...): ...
options     head
	parser = argparse.ArgumentParser(
	    description=__doc__, formatter_class=argparse.RawTextHelpFormatter)
	parser.add_argument('-f', '--filename', type=str,
	    default=None, help="")
	parser.add_argument('-b', '--bool', action='store_true',
	    help="")
	args = parser.parse_args()

# snippet     class abbr        class Class(...): ...
# options     head
# 	class ${1:#:name}():
# 		"""
# 		${3:description of this class}
# 
# 		    Attributes
# 		    ----------
# 		    Attribute1 : int
# 		        description
# 		    Attribute2 : int, default var
# 		        description
# 
# 		    Methods
# 		    -------
# 
# 		    Notes
# 		    -----
# 		"""


snippet     class abbr        class Class(...): ...
options     head
	class ${1:#:name}():
		"""
		${2:description of this class}

		   .. attribute:: att1

		      Optional comment string.


		   .. attribute:: att2

		      Optional comment string.

		"""

		def __init__(
		       self,
		       comment: str = None,
		       selective_dynamics=None
		   ):
		    """
		    Args:
		        comment (str): description
		        selective_dynamics: description
		    """

# snippet     def
# abbr        def function(...): ...
# options     head
# 	def ${1:#:name}(${2:object}):
# 		"""
# 		${3:description of this method}
# 
# 		    Parameters
# 		    ----------
# 		    paramname1 : int
# 		        description
# 		    paramname2 : int, default var
# 		        description
# 
# 		    Returns
# 		    -------
# 		    fruit_price : int
# 		        description
# 
# 		    Notes
# 		    -----
# 
# 		    Raises
# 		    ------
# 		    ValueError
# 		        conditions which ValueError occurs
# 		"""

snippet     def
abbr        def function(...): ...
options     head
	def ${1:#:name}(${2:object}):
		"""
		${3:description of this definition}

		Args:
		    arg1 (str): description
		    arg2 (3x3 numpy array): description

		Returns:
		    dict: description

		Raises:
		    ValueError: description

		Examples:
		    description

		    >>> print_test ("test", "message")
		      test message

		Note:
		    description
		"""

snippet     init
options     head
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

	"""
	hogehoge calculation
	--------------------
	description of this script
	"""
