# 基本は github.com のレポジトリーを指定するだけ
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_i = 1

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neomru.vim'


[[plugins]] repo = 'scrooloose/nerdtree'
hook_add = '''
    nnoremap <silent><C-n> :NERDTreeToggle<CR>
    " ブックマークを初期表示
    let g:NERDTreeShowBookmarks=1

    " 隠しファイル表示
    let NERDTreeShowHidden = 1

    " NERDTress File highlighting (うまくいってない)
    function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
      exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
      exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
    endfunction
    call NERDTreeHighlightFile('py',     'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('md',     'blue',    'none', '#3366FF', '#151515')
    call NERDTreeHighlightFile('yml',    'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('config', 'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('conf',   'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('json',   'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('html',   'yellow',  'none', 'yellow',  '#151515')
    call NERDTreeHighlightFile('styl',   'cyan',    'none', 'cyan',    '#151515')
    call NERDTreeHighlightFile('css',    'cyan',    'none', 'cyan',    '#151515')
    call NERDTreeHighlightFile('rb',     'Red',     'none', 'red',     '#151515')
    call NERDTreeHighlightFile('js',     'Red',     'none', '#ffa500', '#151515')
    call NERDTreeHighlightFile('php',    'Magenta', 'none', '#ff00ff', '#151515')
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_config = {
    \   "_" :{
    \         "runner" : "vimproc",
    \         "runner/vimproc/updatetime" : 60
    \         },
    \}

    let g:quickrun_config = {
    \   'tex': {
    \       'command': 'latexmk',
    \       'exec': ['%c -gg -pdfdvi %s', 'mupdf %s:r.pdf']
    \   },
    \}
'''

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
    " デフォルトのキーマッピングを無効に
    " let g:EasyMotion_do_mapping = 0
    " f + 2文字 で画面全体を検索してジャンプ
    " nmap f <plug>(easymotion-overwin-f2)
    " 検索時、大文字小文字を区別しない
    let g:EasyMotion_smartcase = 1

    let g:EasyMotion_leader_key = '<Space>'
'''


[[plugins]]
repo = 'pgilad/vim-skeletons'
hook_add = '''
    augroup template
      autocmd!
      autocmd BufNewFile job.sh 0r $HOME/.mydot/nvim/template/job.sh
      autocmd BufNewFile INCAR 0r $HOME/.mydot/nvim/template/INCAR
      autocmd BufNewFile KPOINTS 0r $HOME/.mydot/nvim/template/KPOINTS
      autocmd BufNewFile disp.conf 0r $HOME/.mydot/nvim/template/disp.conf
      autocmd BufNewFile dos.conf 0r $HOME/.mydot/nvim/template/dos.conf
      autocmd BufNewFile thermal.conf 0r $HOME/.mydot/nvim/template/thermal.conf
      autocmd BufNewFile fc-hdf.conf 0r $HOME/.mydot/nvim/template/fc-hdf.conf
      autocmd BufNewFile kaccum.conf 0r $HOME/.mydot/nvim/template/kaccum.conf
      autocmd BufNewFile *.py 0r $HOME/.mydot/nvim/template/skeleton.py
      autocmd BufNewFile *.sh 0r $HOME/.mydot/nvim/template/skeleton.sh
    augroup END
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_i = 1
hook_add = '''
    " vim立ち上げたときに、自動的にvim-indent-guidesをオンにする
    let g:indent_guides_enable_on_vim_startup=1
    " ガイドをスタートするインデントの量
    ""let g:indent_guides_start_level=2
    " 自動カラーを無効にする
    ""let g:indent_guides_auto_colors=0
    " 奇数インデントのカラー
    ""autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#262626 ctermbg=gray
    " 偶数インデントのカラー
    "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#3c3c3c ctermbg=darkgray
    " ハイライト色の変化の幅
    "let g:indent_guides_color_change_percent = 30
    " ガイドの幅
    "let g:indent_guides_guide_size = 1 set tabstop=2 shiftwidth=2 expandtab
    let g:indent_guides_enable_on_vim_startup = 1 "enable on vim startup
    let g:indent_guides_guide_size = 1
    let g:indent_guides_auto_colors = 0
    let g:indent_guides_start_level = 2
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=black
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=235
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
on_i = 1
hook_add = '''
    " モードの表示名を定義(デフォルトだと長くて横幅を圧迫するので略称にしている)
    let g:airline_mode_map = {
        \ '__' : '-',
        \ 'n'  : 'N',
        \ 'i'  : 'I',
        \ 'R'  : 'R',
        \ 'c'  : 'C',
        \ 'v'  : 'V',
        \ 'V'  : 'V',
        \ '' : 'V',
        \ 's'  : 'S',
        \ 'S'  : 'S',
    "   \ '' : 'S',
        \ }

    " パワーラインでかっこよく
    ""let g:airline_powerline_fonts = 1
    " カラーテーマ指定してかっこよく
    ""let g:airline_theme = 'badwolf'
    " タブバーをかっこよく
    ""let g:airline#extensions#tabline#enabled = 1

    " 選択行列の表示をカスタム(デフォルトだと長くて横幅を圧迫するので最小限に)
    ""let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])

    " virtulenvを認識しているか確認用に、現在activateされているvirtualenvを表示(vim-virtualenvの拡張)
    ""let g:airline#extensions#virtualenv#enabled = 1

    " gitのHEADから変更した行の+-を非表示(vim-gitgutterの拡張)
    ""let g:airline#extensions#hunks#enabled = 0

    " Lintツールによるエラー、警告を表示(ALEの拡張)
    ""let g:airline#extensions#ale#enabled = 1
    ""let g:airline#extensions#ale#error_symbol = 'E:'
    ""let g:airline#extensions#ale#warning_symbol = 'W:'
'''

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'lervag/vimtex'
hook_add = '''
    let g:vimtex_compiler_latexmk = {
          \ 'background': 1,
          \ 'build_dir': '',
          \ 'continuous': 1,
          \ 'options': [
          \    '-pdfdvi', 
          \    '-verbose',
          \    '-file-line-error',
          \    '-synctex=1',
          \    '-interaction=nonstopmode',
          \],
          \}

    let g:vimtex_view_general_viewer
          \ = 'mupdf'
    let g:vimtex_view_general_options = '-r @line @pdf @tex'
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    let g:deoplete#enable_at_startup = 1
'''
